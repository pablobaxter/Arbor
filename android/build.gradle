apply from: '../publish.gradle'
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

group arbor_group
version arbor_version


android {
    compileSdkVersion compileSdk_version

    defaultConfig {
        minSdkVersion minSdk_version
        targetSdkVersion targetSdk_version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    
    implementation project (':shared')

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutine_version"

    //Test
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_runner_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_espresso_core_version"
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier = 'sources'
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        arborAndroid(MavenPublication) {
            artifact("$buildDir/outputs/aar/android-release.aar")
            groupId arbor_group
            artifactId project.name // replace with your library artifact id
            version arbor_version

            pom.withXml(configureMavenCentralAndroidMetaData)
        }
    }
}

bintray {
    //Gets local.properties info
    Properties properties = new Properties()
    def propertiesFile = project.rootProject.file('local.properties')
    properties.load(propertiesFile.newDataInputStream())

    //Assigns credentials
    user = properties.getProperty('bintray.user') ?: System.getenv('BINTRAY_USER')
    key = properties.getProperty('bintray.apiKey') ?: System.getenv('BINTRAY_API_KEY')

    //Only want the Android AARs
    publications = ['arborAndroid']
    configurations = ['archives']

    // Default: false. Whether to run this as dry-run, without deploying
    dryRun = false
    // Default: false. Whether to override version artifacts already published
    override = false
    // Default: false. Whether version should be auto published after an upload
    publish = true

    pkg {
        repo = 'Arbor' // the name of the repository you created on Bintray
        name = 'com.frybits.arbor-android' // the name of the package you created inside it
        licenses = ['MIT']
        vcsUrl = 'https://github.com/pablobaxter/Arbor.git'
        version {
            name = this.version
            released = new Date()
            vcsTag = this.version
        }
    }
}